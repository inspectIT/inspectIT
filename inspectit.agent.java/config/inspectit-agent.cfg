## repository <IP> <port> <Agent Name>
#############################################
repository localhost 9070 inspectIT

## method-sensor-type <name> <fully-qualified-name> <priority> [<additional options>]
#####################################################################################
# method-sensor-type average-timer info.novatec.inspectit.agent.sensor.method.averagetimer.AverageTimerSensor HIGH stringLength=100
method-sensor-type timer info.novatec.inspectit.agent.sensor.method.timer.TimerSensor MAX stringLength=100 
method-sensor-type isequence info.novatec.inspectit.agent.sensor.method.invocationsequence.InvocationSequenceSensor INVOC stringLength=100
method-sensor-type jdbc-connection info.novatec.inspectit.agent.sensor.method.jdbc.ConnectionSensor MIN
method-sensor-type jdbc-prepared-statement info.novatec.inspectit.agent.sensor.method.jdbc.PreparedStatementSensor MIN stringLength=1000
method-sensor-type jdbc-prepared-statement-parameter info.novatec.inspectit.agent.sensor.method.jdbc.PreparedStatementParameterSensor MIN
method-sensor-type jdbc-statement info.novatec.inspectit.agent.sensor.method.jdbc.StatementSensor MIN stringLength=1000

## to activate jRebel support add jRebel=true to sensor definition
## method-sensor-type timer info.novatec.inspectit.agent.sensor.method.timer.TimerSensor MAX jRebel=true

## jmx-sensor-type <name> <fully-qualified-name>
#########################################
jmx-sensor-type jmx info.novatec.inspectit.agent.sensor.jmx.JmxSensor

## exception-sensor-type <fully-qualified-name> [<additional options>]
######################################################################
exception-sensor-type info.novatec.inspectit.agent.sensor.exception.ExceptionSensor mode=simple stringLength=500

## platform-sensor-type <fully-qualified-name> [<additional options>]
#####################################################################
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.ClassLoadingInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.CompilationInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.MemoryInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.CpuInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.RuntimeInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.SystemInformation
platform-sensor-type info.novatec.inspectit.agent.sensor.platform.ThreadInformation

## send-strategy <fully-qualified-name>
#######################################
send-strategy info.novatec.inspectit.agent.sending.impl.TimeStrategy time=5000
# send-strategy info.novatec.inspectit.agent.sending.impl.ListSizeStrategy size=10

## buffer-strategy <fully-qualified-name>
#########################################
buffer-strategy info.novatec.inspectit.agent.buffer.impl.SimpleBufferStrategy
#buffer-strategy info.novatec.inspectit.agent.buffer.impl.SizeBufferStrategy size=12

## Ignore classes settings
#########################################
$include common/exclude-classes.cfg

## SQL tracing
##############
$include common/sql.cfg
## Uncomment configuration file under to enable parameter binding for SQL queries. This feature allows to have
## prepared Statements filled with the concrete parameter value that it was executed with, instead of just "?" values.
## Bear in mind that activating this feature will affect performance in a negative way as more methods need to be instrumented.
# $include common/sql-parameters.cfg

## Logging information
######################
$include common/logging-log4j.cfg

## Common technologies (please uncomment wanted)
################################################
# $include common/ejb.cfg
# $include common/http.cfg
# $include common/hibernate.cfg
# $include common/struts.cfg
# $include common/jsf.cfg
# $include common/jpa.cfg
# $include common/jta.cfg
# $include common/webservice.cfg


## EXAMPLES
###########
# sensor timer novatec.SubTest msg(java.lang.String)
# sensor timer novatec.Sub* msg(int) modifiers=pub
# sensor timer novatec.SubTest msg(*String) modifiers=pub
# sensor timer novatec.Sub* m*(java.lang.String,*String) modifiers=pub
# sensor timer novatec.ITest * interface=true modifiers=pub,prot
# sensor timer nova*.Te* m*(*String) superclass=true modifiers=pub,prot
# sensor timer * * @javax.ejb.Stateless modifiers=pub

# sensor timer info.novatec.inspectitsamples.calculator.Calculator * modifiers=pub
# sensor timer info.novatec.inspectitsamples.calculator.Calculator substract(double,double)
# sensor timer info.novatec.inspectitsamples.calculator.Calculator divide(double,double)
# sensor timer info.novatec.inspectitsamples.calculator.Calculator multiply(double,double)

## The following aren't working properly (for java classes), just added to show the usage of the superclass/interface option
# sensor timer java.lang.Object * superclass=true modifiers=pub
# sensor timer java.util.List size() interface=true modifiers=pub

## For parameter catching: p=parameter of the method | f=field of the class/instance | r=return value of a method
# sensor isequence info.novatec.inspectitsamples.calculator.Calculator actionPerformed p=0;Source; f=LastOperator;lastOperator f=LastOutput;jlbOutput.text

# reads the result of the substract method (which is a double)
# sensor timer info.novatec.inspectitsamples.calculator.Calculator substract(double,double) r=substractionResult;

## For constructors:
# sensor timer info.novatec.inspectitsamples.calculator.Calculator <init> modifiers=pub

# Specified modifiers can be: pub (public), prot (protected), priv (private) and def (default)

# To save timer data to DB for charting and future checking use charting=true
# sensor timer novatec.SubTest msg(java.lang.String) charting=true

## Exception catching
# exception-sensor info.novatec.exception.MyException
# exception-sensor info.novatec.ex*.*Exception

## You can include additional sensor configuration files (e.g. for separation or easier (de-)activation) like this
## If no absolute path is specified, the folder containing this file will be taken as the root!
# $include sensors.cfg
# $include api1.cfg
# $include api2.cfg
# $include /my/path/to/the/configuration/ui-sensors.cfg

## Your Sensor Definitions
##########################
# sensor <sensor-type-name> <class-to-monitor> <method-to-monitor> [<additional options>]

## Your JMX Sensor Definitions
##############################
# jmx-sensor <sensor-type-name> mbeanname=<name-of-mbean-to-monitor> attributename=<name-of-attribute-to-monitor>
