/**
 * Gradle build file for the inspectit.shared.all project.
 * 
 * @author Rene Kugel
 * @author Ivan Senic
 */
defaultTasks 'releaseAndAnalyze'

/** used by the eclipse buildship plugin */
sourceCompatibility = '1.6'
targetCompatibility = '1.6'

/** Artifact names */
ext {
	distJarName = 'inspectit-shared-all'
	pluginName = 'rocks.inspectit.shared.all'
}

/** Setting compile configuration as plugin in Eclipse needs it */
configurations {
	compile {
		extendsFrom configurations.sharedAllProd
	}
	testCompile {
		extendsFrom configurations.sharedAllTest
	}
	testArchives.extendsFrom (testCompile)
}

/** Compile compatibility to 1.6 for all compile tasks */
tasks.withType(JavaCompile) { 
	sourceCompatibility = '1.6'
	targetCompatibility = '1.6'

	options.bootClasspath = configurations.java16rt.asPath
}

/** Task for creating the version file if needed. */
task createVersionFile {
	ext.versionFile = new File(buildDir.getAbsolutePath(), 'version/version.log')
	inputs.property(versionInfo, null)
	outputs.file versionFile
	
	doLast {
		versionFile.getParentFile().mkdirs()
		if (!versionFile.exists()) {
			versionFile.createNewFile()
		}
		versionFile.text = versionInfo
	}
}
createVersionFile.onlyIf { project.hasProperty('versionInfo') }

/** 
 * Creates the jar. If needed create version.log on the fly and update the version in the MANIFEST.MF.
 */
jar {
	archivesBaseName = distJarName
	
	into('') {
		from new File(buildDir.getAbsolutePath(), 'version/version.log')
	}
	
	manifest  {
		from ("${mainResources}/META-INF/MANIFEST.MF") {
			eachEntry { details ->
				if (details.key == 'Bundle-Version' && project.hasProperty('versionInfo')) {
					details.value =  versionInfo
				}
			}
		}
	}
}
jar.dependsOn createVersionFile

task releaseAndAnalyze {
	description = "Runs all unit tests, all checks and assembles a jar archive."
	group = 'Release'

	dependsOn(analyze, jar)
}

/**
 * The following task is needed because we want to have our base test classes available in the other sub-projects, too.
 */
task ('jarTest', type:Jar, dependsOn: testClasses, description: 'Assembles a jar archive from the test source set') {
	group = BasePlugin.BUILD_GROUP
	from project.sourceSets.test.output
	include '**/testbase/*'
	classifier = 'test'
}

/**
 * The artifact definition for this new test jar defined by the jarTest task.
 */
artifacts {
	testArchives project.jarTest
}
